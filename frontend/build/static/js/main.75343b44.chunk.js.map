{"version":3,"sources":["components/Footer.js","constants/userConstants.js","components/Header.js","actions/userActions.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/contactsConstants.js","actions/contactsActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyContacts/MyContacts.js","screens/SingleContact/SingleContact.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/SingleContact/CreateContact.js","screens/ProfileScreen/ProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/contactsReducers.js","reducers/userReducers.js","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","Header","setSearch","dispatch","useDispatch","userInfo","useSelector","state","userLogin","useEffect","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Form","inline","FormControl","type","placeholder","onChange","e","target","value","Link","NavDropdown","title","name","console","log","Item","Divider","onClick","a","localStorage","removeItem","LandingPage","history","push","to","Button","size","MainScreen","children","CONTACTS_LIST_REQUEST","CONTACTS_LIST_SUCCESS","CONTACTS_LIST_FAIL","CONTACTS_CREATE_REQUEST","CONTACTS_CREATE_SUCCESS","CONTACTS_CREATE_FAIL","CONTACTS_UPDATE_REQUEST","CONTACTS_UPDATE_SUCCESS","CONTACTS_UPDATE_FAIL","CONTACTS_DELETE_REQUEST","CONTACTS_DELETE_SUCCESS","CONTACTS_DELETE_FAIL","deleteContactAction","getState","config","headers","Authorization","token","axios","delete","data","payload","message","response","Loading","alignItems","height","Spinner","animation","ErrorMessage","Alert","fontSize","MyContacts","search","contactList","loading","error","contacts","contactDelete","loadingDelete","errorDelete","successDelete","success","successCreate","contactCreate","successUpdate","contactUpdate","get","marginLeft","marginBottom","filter","filteredContact","toLowerCase","includes","reverse","map","contact","Card","margin","color","textDecoration","flex","cursor","alignSelf","src","upic","alt","Badge","department","number","_id","window","confirm","SingleContact","match","useState","setName","setNumber","setDepartment","date","setDate","params","updatedAt","fetching","Body","onSubmit","preventDefault","put","updateContactAction","Group","controlId","Label","Control","as","substring","LoginScreen","email","setEmail","password","setPassword","post","setItem","JSON","stringify","login","RegisterScreen","pic","setPic","confirmpassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","register","File","pics","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","label","custom","CreateContact","resetHandler","createContactAction","ProfileScreen","location","confirmPassword","userUpdate","md","user","varient","App","s","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75343b44.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer\n      style={{\n        width: \"100%\",\n        position: \"relative\",\n        bottom: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; Contact Manager</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\n","import React, { useEffect } from \"react\";\nimport {\n  Container,\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  NavDropdown,\n} from \"react-bootstrap\";\n\nimport {} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../actions/userActions\";\n\nfunction Header({ setSearch }) {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  useEffect(() => {}, [userInfo]);\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand href=\"/\">Contact Manager</Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"m-auto\">\n            {userInfo && (\n              <Form inline>\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Search\"\n                  className=\"mr-sm-2\"\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n              </Form>\n            )}\n          </Nav>\n          <Nav>\n            {userInfo ? (\n              <>\n                <Nav.Link href=\"/mycontacts\">My Contacts</Nav.Link>\n                <NavDropdown\n                  title={`${userInfo.name}`}\n                  id=\"collasible-nav-dropdown\"\n                >\n                  {console.log(`${userInfo.name}, \"hi\"`)}\n                  <NavDropdown.Item href=\"/profile\">\n                    My Profile\n                  </NavDropdown.Item>\n\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            ) : (\n              <Nav.Link href=\"/login\">Login</Nav.Link>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\n\n/**\n * Contains the action related to user and passed to the reducer\n * @method login \n * @method logout \n * @method register \n * @method updateProfile\n */\n\n// @desc login the existing mapping email and password\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//@desc logout and remove the userInfo from local storage that pushes the user to LandingPage\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n};\n\n//@desc register the user, generate the token and save them in local storage\nexport const register = (name, email, password, pic) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, pic, email, password },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//@desc update the userInfo\nexport const updateProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/users/profile\", user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./LandingStyles.css\";\n\nfunction LandingPage({ history }) {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/mycontacts\");\n    }\n  }, [history, userInfo]);\n\n  return (\n    <div className=\"main\">\n      <Container>\n        <Row>\n          <div className=\"intro-text\">\n            <div>\n              <h1 className=\"title\">Welcome to Contact Manager</h1>\n              <p className=\"subtitle\">One Safe place for all your Contact.</p>\n            </div>\n            <div className=\"buttonContainer\">\n              <Link to=\"/login\">\n                <Button size=\"lg\" className=\"landingbutton\">\n                  Login\n                </Button>\n              </Link>\n              <Link to=\"/register\">\n                <Button\n                  variant=\"outline-primary\"\n                  size=\"lg\"\n                  className=\"landingbutton\"\n                >\n                  Signup\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import \"./css/MainScreen.css\";\nimport React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\n\n\nfunction MainScreen({ children, title }) {\n  return (\n    <div className=\"mainback\">\n      <Container>\n        <Row>\n          <div className=\"page\">\n            {title && (\n              <>\n                <h1 className=\"heading\">{title}</h1>\n                <hr />\n              </>\n            )}\n            {children}\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default MainScreen;\n","export const CONTACTS_LIST_REQUEST = \"CONTACTS_LIST_REQUEST\";\nexport const CONTACTS_LIST_SUCCESS = \"CONTACTS_LIST_SUCCESS\";\nexport const CONTACTS_LIST_FAIL = \"CONTACTS_LIST_FAIL\";\n\nexport const CONTACTS_CREATE_REQUEST = \"CONTACTS_CREATE_REQUEST\";\nexport const CONTACTS_CREATE_SUCCESS = \"CONTACTS_CREATE_SUCCESS\";\nexport const CONTACTS_CREATE_FAIL = \"CONTACTS_CREATE_FAIL\";\n\nexport const CONTACTS_UPDATE_REQUEST = \"CONTACTS_UPDATE_REQUEST\";\nexport const CONTACTS_UPDATE_SUCCESS = \"CONTACTS_UPDATE_SUCCESS\";\nexport const CONTACTS_UPDATE_FAIL = \"CONTACTS_UPDATE_FAIL\";\n\nexport const CONTACTS_DELETE_REQUEST = \"CONTACTS_DELETE_REQUEST\";\nexport const CONTACTS_DELETE_SUCCESS = \"CONTACTS_DELETE_SUCCESS\";\nexport const CONTACTS_DELETE_FAIL = \"CONTACTS_DELETE_FAIL\";\n","import {\n  CONTACTS_CREATE_FAIL,\n  CONTACTS_CREATE_REQUEST,\n  CONTACTS_CREATE_SUCCESS,\n  CONTACTS_DELETE_FAIL,\n  CONTACTS_DELETE_REQUEST,\n  CONTACTS_DELETE_SUCCESS,\n  CONTACTS_LIST_FAIL,\n  CONTACTS_LIST_REQUEST,\n  CONTACTS_LIST_SUCCESS,\n  CONTACTS_UPDATE_FAIL,\n  CONTACTS_UPDATE_REQUEST,\n  CONTACTS_UPDATE_SUCCESS,\n} from \"../constants/contactsConstants\";\nimport axios from \"axios\";\n\n// @desc redux action for listing contacts dispatched to reducer function\nexport const listContacts = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CONTACTS_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/contacts`, config);\n\n    dispatch({\n      type: CONTACTS_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: CONTACTS_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\n// @desc redux action for listing contacts dispatched to reducer function\n// @param [name, number, department, upic]\nexport const createContactAction = (name, number, department, upic) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: CONTACTS_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n \n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/contacts/create\",\n      { name, number, department, upic },\n      config\n    );\n\n    console.log(data);\n\n    console.log(data);\n    dispatch({\n      type: CONTACTS_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: CONTACTS_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\n// @desc redux action for deleting contacts dispatched to reducer function\n// @param{id} unique id generated by mongodb\nexport const deleteContactAction = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CONTACTS_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/contacts/${id}`, config);\n\n    dispatch({\n      type: CONTACTS_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: CONTACTS_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\n// @desc redux action for deleting contacts dispatched to reducer function\n// @param{id} unique id generated by mongodb\n// @param[name, number, department, upic] for the contact\nexport const updateContactAction = (id, name, number, department, upic) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: CONTACTS_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/contacts/${id}`,\n      { name, number, department, upic },\n      config\n    );\n\n    dispatch({\n      type: CONTACTS_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: CONTACTS_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\n// @desc creates spinner loading animation\nfunction Loading({ size = 100 }) {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    >\n      <Spinner\n        style={{\n          width: size,\n          height: size,\n        }}\n        animation=\"border\"\n      />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst ErrorMessage = ({ variant = \"info\", children }) => {\n  return (\n    <Alert variant={variant} style={{ fontSize: 20 }}>\n      <strong>{children}</strong>\n    </Alert>\n  );\n};\n\nexport default ErrorMessage;\n","import React, { useEffect } from \"react\";\nimport { Badge, Button, Card } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Link } from \"react-router-dom\";\nimport \"./MyContacts.css\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteContactAction,\n  listContacts,\n} from \"../../actions/contactsActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nfunction MyContacts({ history, search }) {\n  const dispatch = useDispatch();\n\n  const contactList = useSelector((state) => state.contactList);\n  const { loading, error, contacts } = contactList;\n\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const contactDelete = useSelector((state) => state.contactDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = contactDelete;\n\n  const contactCreate = useSelector((state) => state.contactCreate);\n  const { success: successCreate } = contactCreate;\n\n  const contactUpdate = useSelector((state) => state.contactUpdate);\n  const { success: successUpdate } = contactUpdate;\n\n  useEffect(() => {\n    dispatch(listContacts());\n    if (!userInfo) {\n      history.push(\"/\");\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    successUpdate,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteContactAction(id));\n    }\n  };\n\n  return (\n    <MainScreen title={`Welcome ${userInfo && userInfo.name}..`}>\n      <Link to=\"/createcontact\">\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n          Create new Contact\n        </Button>\n      </Link>\n      \n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n      {errorDelete && (\n        <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n      )}\n      {loading && <Loading />}\n      {loadingDelete && <Loading />}\n\n      {contacts &&\n        contacts\n          .filter((filteredContact) =>\n            filteredContact.name.toLowerCase().includes(search.toLowerCase())\n          )\n          .reverse()\n          .map((contact) => (\n              <Card style={{ margin: 10 }} key={contact._id}>\n                <Card.Header style={{ display: \"flex\" }}>\n                  <span\n                    style={{\n                      color: \"black\",\n                      textDecoration: \"none\",\n                      flex: 0.2,\n                      cursor: \"pointer\",\n                      alignSelf: \"center\",\n                      fontSize: 18,\n                    }}\n                  >\n                      {contact.name}\n                      <div className=\"profilePic\">\n                      <img src={contact.upic} alt={contact.name}  /></div>\n                      </span>\n                      <span  style={{\n                      color: \"black\",\n                      textDecoration: \"none\",\n                      flex: 1,\n                      cursor: \"pointer\",\n                      alignSelf: \"center\",\n                      fontSize: 18,\n                    }}> <h4>\n                      <Badge variant=\"success\">\n                        Department - {contact.department}\n                      </Badge>\n                    </h4>\n                    <blockquote className=\"blockquote mb-0\">\n                     <p> Phone no-{contact.number}</p>\n                     </blockquote>\n                    </span>\n                  <div>\n                    <Button href={`/contact/${contact._id}`}>Edit</Button>\n                    <Button\n                      variant=\"danger\"\n                      className=\"mx-2\"\n                      onClick={() => deleteHandler(contact._id)}\n                    >\n                      Delete\n                    </Button>\n                  </div>\n                </Card.Header>\n              </Card>\n          ))}\n    </MainScreen>\n  );\n}\n\nexport default MyContacts;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContactAction, updateContactAction } from \"../../actions/contactsActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\n\nfunction SingleContact({ match, history }) {\n  const [name, setName] = useState();\n  const [number, setNumber] = useState();\n  const [department, setDepartment] = useState();\n  const [date, setDate] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const contactUpdate = useSelector((state) => state.contactUpdate);\n  const { loading, error } = contactUpdate;\n\n  const contactDelete = useSelector((state) => state.contactDelete);\n  const { loading: loadingDelete, error: errorDelete } = contactDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteContactAction(id));\n    }\n    history.push(\"/mycontacts\");\n  };\n\n  useEffect(() => {\n    const fetching = async () => {\n      const { data } = await axios.get(`/api/contacts/${match.params.id}`);\n\n      setName(data.name);\n      setNumber(data.number);\n      setDepartment(data.department);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setName(\"\");\n    setNumber(\"\");\n    setDepartment(\"\");\n  };\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateContactAction(match.params.id, name, number, department));\n    if (!name || !number || !department) return;\n\n    resetHandler();\n    history.push(\"/mycontacts\");\n  };\n\n  return (\n    <MainScreen title=\"Edit Contact\">\n      <Card>\n        <Card.Header>Edit your Contact</Card.Header>\n        <Card.Body>\n          <Form onSubmit={updateHandler}>\n            {loadingDelete && <Loading />}\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            {errorDelete && (\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n            )}\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter the Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"number\">\n              <Form.Label>Phone Number</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Enter the content\"\n                value={number}\n                onChange={(e) => setNumber(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"department\">\n              <Form.Label>Department</Form.Label>\n              <Form.Control\n                type=\"content\"\n                placeholder=\"Enter the Department\"\n                value={department}\n                onChange={(e) => setDepartment(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button variant=\"primary\" type=\"submit\">\n              Update Contact\n            </Button>\n            <Button\n              className=\"mx-2\"\n              variant=\"danger\"\n              onClick={() => deleteHandler(match.params.id)}\n            >\n              Delete Contact\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Updated on - {date.substring(0, 10)}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default SingleContact;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { login } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./LoginScreen.css\";\n\nfunction LoginScreen({ history }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/mycontacts\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <MainScreen title=\"LOGIN\">\n      <div className=\"loginContainer\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        <Row className=\"py-3\">\n          <Col>\n            New Customer ? <Link to=\"/register\">Register Here</Link>\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n}\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { register } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./RegisterScreen.css\";\n\nfunction RegisterScreen({ history }) {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [pic, setPic] = useState(\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n  );\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [picMessage, setPicMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const postDetails = (pics) => {\n    if (\n      pics ===\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n    ) {\n      return setPicMessage(\"Please Select an Image\");\n    }\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"contactmanager\");\n      data.append(\"cloud_name\", \"dxlepos58\");\n      fetch(\"https://api.cloudinary.com/v1_1/dxlepos58/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n        console.log(pic)\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password !== confirmpassword) {\n      setMessage(\"Passwords do not match\");\n    } else dispatch(register(name, email, password, pic));\n  };\n\n  return (\n    <MainScreen title=\"REGISTER\">\n      <div className=\"loginContainer\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              value={name}\n              placeholder=\"Enter name\"\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={confirmpassword}\n              placeholder=\"Confirm Password\"\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          {picMessage && (\n            <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n          )}\n          <Form.Group controlId=\"pic\">\n            <Form.Label>Profile Picture</Form.Label>\n            <Form.File\n              onChange={(e) => postDetails(e.target.files[0])}\n              id=\"custom-file\"\n              type=\"image/png\"\n              label=\"Upload Profile Picture\"\n              custom\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Register\n          </Button>\n        </Form>\n        <Row className=\"py-3\">\n          <Col>\n            Have an Account ? <Link to=\"/login\">Login</Link>\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n}\n\nexport default RegisterScreen;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createContactAction } from \"../../actions/contactsActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nfunction CreateContact({ history }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const contactCreate = useSelector((state) => state.contactCreate);\n  const { loading, error, contacts } = contactCreate;\n\n\n  const resetHandler = () => {\n    setName(\"\");\n    setDepartment(\"\");\n    setNumber(\"\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createContactAction(name, number, department));\n    if (!name || !number || !department) return;\n\n    resetHandler();\n    history.push(\"/mycontacts\");\n  };\n\n\n  useEffect(() => {}\n  , [history]);\n\n  return (\n    <MainScreen title=\"Create a Contact\">\n      <Card>\n        <Card.Header>Create a new Contact</Card.Header>\n        <Card.Body>\n          <Form onSubmit={submitHandler}>\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                value={name}\n                placeholder=\"Enter the Name\"\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"number\">\n              <Form.Label>Phone Number</Form.Label>\n              <Form.Control\n                type=\"number\"\n                value={number}\n                placeholder=\"Enter the Number\"\n                onChange={(e) => setNumber(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"department\">\n              <Form.Label>Department</Form.Label>\n              <Form.Control\n                type=\"content\"\n                value={department}\n                placeholder=\"Enter the Department\"\n                onChange={(e) => setDepartment(e.target.value)}\n              />\n            </Form.Group>\n\n            {/* <Form.Group controlId=\"upic\">\n              <Form.Label>User Pic</Form.Label>\n              <Form.File\n                onChange={(e) => postDetails(e.target.files[0])}\n                id=\"custom-file\"\n                type=\"image/png\"\n                label=\"Upload user Profile\"\n                custom\n              /> */}\n            {/* </Form.Group> */}\n            {loading && <Loading size={50} />}\n            <Button type=\"submit\" variant=\"primary\">\n              Create Contact\n            </Button>\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n              Reset Feilds\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default CreateContact;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./ProfileScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProfile } from \"../../actions/userActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pic, setPic] = useState();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [picMessage, setPicMessage] = useState();\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const { loading, error, success } = userUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n      setPic(userInfo.pic);\n    }\n  }, [history, userInfo]);\n\n  const postDetails = (pics) => {\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"contactmanager\");\n      data.append(\"cloud_name\", \"dxlepos58\");\n      fetch(\"https://api.cloudinary.com/v1_1/dxlepos58/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(pic);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n        console.log(pic)\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateProfile({ name, email, password, pic }));\n  };\n\n  return (\n    <MainScreen title=\"EDIT PROFILE\">\n      <div>\n        <Row className=\"profileContainer\">\n          <Col md={6}>\n            <Form onSubmit={submitHandler}>\n              {loading && <Loading />}\n              {success && (\n                <ErrorMessage variant=\"success\">\n                  Updated Successfully\n                </ErrorMessage>\n              )}\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>{\" \"}\n              {picMessage && (\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n              )}\n              <Form.Group controlId=\"pic\">\n                <Form.Label>Change Profile Picture</Form.Label>\n                <Form.File\n                  onChange={(e) => postDetails(e.target.files[0])}\n                  id=\"custom-file\"\n                  type=\"image/png\"\n                  label=\"Upload Profile Picture\"\n                  custom\n                />\n              </Form.Group>\n              <Button type=\"submit\" varient=\"primary\">\n                Update\n              </Button>\n            </Form>\n          </Col>\n          <Col\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <img src={pic} alt={name} className=\"profilePic\" />\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default ProfileScreen;\n","import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport LandingPage from \"./screens/LandingPage/LandingPage\";\nimport MyContacts from \"./screens/MyContacts/MyContacts\";\nimport SingleContact from \"./screens/SingleContact/SingleContact\";\nimport LoginScreen from \"./screens/LoginScreen/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen/RegisterScreen\";\nimport CreateContact from \"./screens/SingleContact/CreateContact\";\nimport { useState } from \"react\";\nimport ProfileScreen from \"./screens/ProfileScreen/ProfileScreen\";\n\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n  return (\n    <Router>\n      <Header setSearch={(s) => setSearch(s)} />\n      <main className=\"App\">\n        <Route path=\"/\" component={LandingPage} exact />\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route\n          path=\"/mycontacts\"\n          component={({ history }) => (\n            <MyContacts search={search} history={history} />\n          )}\n        />\n        <Route path=\"/contact/:id\" component={SingleContact} />\n        <Route path=\"/createcontact\" component={CreateContact} />;\n        <Route path=\"/profile\" component={ProfileScreen} />\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  contactCreateReducer,\n  contactDeleteReducer,\n  contactListReducer,\n  contactUpdateReducer,\n} from \"./reducers/contactsReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\n\nconst reducers = combineReducers({\n  contactList: contactListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  contactCreate: contactCreateReducer,\n  contactDelete: contactDeleteReducer,\n  contactUpdate: contactUpdateReducer,\n  userUpdate: userUpdateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  CONTACTS_UPDATE_REQUEST,\n  CONTACTS_UPDATE_SUCCESS,\n  CONTACTS_UPDATE_FAIL,\n  CONTACTS_CREATE_FAIL,\n  CONTACTS_CREATE_REQUEST,\n  CONTACTS_CREATE_SUCCESS,\n  CONTACTS_DELETE_FAIL,\n  CONTACTS_DELETE_REQUEST,\n  CONTACTS_DELETE_SUCCESS,\n  CONTACTS_LIST_FAIL,\n  CONTACTS_LIST_REQUEST,\n  CONTACTS_LIST_SUCCESS,\n} from \"../constants/contactsConstants\";\n\nexport const contactListReducer = (state = { contacts: [] }, action) => {\n  switch (action.type) {\n    case CONTACTS_LIST_REQUEST:\n      return { loading: true };\n    case CONTACTS_LIST_SUCCESS:\n      return { loading: false, contacts: action.payload };\n    case CONTACTS_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const contactCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CONTACTS_CREATE_REQUEST:\n      return { loading: true };\n    case CONTACTS_CREATE_SUCCESS:\n      return { loading: false, success: true };\n    case CONTACTS_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const contactDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CONTACTS_DELETE_REQUEST:\n      return { loading: true };\n    case CONTACTS_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case CONTACTS_DELETE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n\nexport const contactUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CONTACTS_UPDATE_REQUEST:\n      return { loading: true };\n    case CONTACTS_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case CONTACTS_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}